In file included from [01m[K/home/orthrus1-1/orthrus1-1/src/motor/src/motor_carryout.cpp:12:0[m[K:
/usr/include/c++/7/functional: In instantiation of â€˜[01m[Kstruct std::_Bind_check_arity<void (motor_carryout::*)(std::shared_ptr<message::msg::Motorcarryout_<std::allocator<void> > >) const>[m[Kâ€™:
[01m[K/usr/include/c++/7/functional:854:12:[m[K   required from â€˜[01m[Kstruct std::_Bind_helper<false, void (motor_carryout::*)(std::shared_ptr<message::msg::Motorcarryout_<std::allocator<void> > >) const>[m[Kâ€™
[01m[K/usr/include/c++/7/functional:875:5:[m[K   required by substitution of â€˜[01m[Ktemplate<class _Func, class ... _BoundArgs> typename std::_Bind_helper<std::__is_socketlike<_Func>::value, _Func, _BoundArgs ...>::type std::bind(_Func&&, _BoundArgs&& ...) [with _Func = void (motor_carryout::*)(std::shared_ptr<message::msg::Motorcarryout_<std::allocator<void> > >) const; _BoundArgs = {}][m[Kâ€™
[01m[K/home/orthrus1-1/orthrus1-1/src/motor/src/motor_carryout.cpp:28:69:[m[K   required from here
[01m[K/usr/include/c++/7/functional:841:7:[m[K [01;31m[Kerror: [m[Kstatic assertion failed: Wrong number of arguments for pointer-to-member
       [01;31m[Kstatic_assert[m[K(_Varargs::value
       [01;31m[K^~~~~~~~~~~~~[m[K
/usr/include/c++/7/functional: In substitution of â€˜[01m[Ktemplate<class _Functor, class ... _Bound_args> template<class _Fn, class _CallArgs, class ... _BArgs> using _Res_type_impl = typename std::result_of<_Fn&(std::_Bind<_Functor(_Bound_args ...)>::_Mu_type<_BArgs, _CallArgs>&& ...)>::type [with _Fn = void (motor_carryout::*)(std::shared_ptr<message::msg::Motorcarryout_<std::allocator<void> > >) const; _CallArgs = _CallArgs; _BArgs = {}; _Functor = void (motor_carryout::*)(std::shared_ptr<message::msg::Motorcarryout_<std::allocator<void> > >) const; _Bound_args = {}][m[Kâ€™:
[01m[K/usr/include/c++/7/functional:514:71:[m[K   required from â€˜[01m[Kstruct std::_Bind<void (motor_carryout::*())(std::shared_ptr<message::msg::Motorcarryout_<std::allocator<void> > >) const>[m[Kâ€™
[01m[K/home/orthrus1-1/orthrus1-1/src/motor/src/motor_carryout.cpp:28:69:[m[K   required from here
[01m[K/usr/include/c++/7/functional:511:72:[m[K [01;31m[Kerror: [m[Kno type named â€˜[01m[Ktype[m[Kâ€™ in â€˜[01m[Kclass std::result_of<void (motor_carryout::*&())(std::shared_ptr<message::msg::Motorcarryout_<std::allocator<void> > >) const>[m[Kâ€™
    = typename result_of< _Fn&(_Mu_type<_BArgs, _CallArgs>&&...) >::type[01;31m[K;[m[K
                                                                        [01;31m[K^[m[K
/usr/include/c++/7/functional: In substitution of â€˜[01m[Ktemplate<class _Functor, class ... _Bound_args> template<class _Fn, class _CallArgs, class ... _BArgs> using _Res_type_impl = typename std::result_of<_Fn&(std::_Bind<_Functor(_Bound_args ...)>::_Mu_type<_BArgs, _CallArgs>&& ...)>::type [with _Fn = void (motor_carryout::*)(std::shared_ptr<message::msg::Motorcarryout_<std::allocator<void> > >) const; _CallArgs = std::tuple<_Tps ...>; _BArgs = {}; _Functor = void (motor_carryout::*)(std::shared_ptr<message::msg::Motorcarryout_<std::allocator<void> > >) const; _Bound_args = {}][m[Kâ€™:
[01m[K/usr/include/c++/7/functional:514:71:[m[K   required by substitution of â€˜[01m[Ktemplate<class _Functor, class ... _Bound_args> template<class _CallArgs> using _Res_type = std::_Bind<_Functor(_Bound_args ...)>::_Res_type_impl<_Functor, _CallArgs, _Bound_args ...> [with _CallArgs = std::tuple<_Tps ...>; _Functor = void (motor_carryout::*)(std::shared_ptr<message::msg::Motorcarryout_<std::allocator<void> > >) const; _Bound_args = {}][m[Kâ€™
[01m[K/usr/include/c++/7/functional:547:2:[m[K   required from â€˜[01m[Kstruct std::_Bind<void (motor_carryout::*())(std::shared_ptr<message::msg::Motorcarryout_<std::allocator<void> > >) const>[m[Kâ€™
[01m[K/home/orthrus1-1/orthrus1-1/src/motor/src/motor_carryout.cpp:28:69:[m[K   required from here
[01m[K/usr/include/c++/7/functional:511:72:[m[K [01;31m[Kerror: [m[Kno type named â€˜[01m[Ktype[m[Kâ€™ in â€˜[01m[Kclass std::result_of<void (motor_carryout::*&())(std::shared_ptr<message::msg::Motorcarryout_<std::allocator<void> > >) const>[m[Kâ€™
In file included from [01m[K/opt/ros/dashing/include/rclcpp/subscription_base.hpp:28:0[m[K,
                 from [01m[K/opt/ros/dashing/include/rclcpp/intra_process_manager_impl.hpp:38[m[K,
                 from [01m[K/opt/ros/dashing/include/rclcpp/intra_process_manager.hpp:32[m[K,
                 from [01m[K/opt/ros/dashing/include/rclcpp/publisher.hpp:35[m[K,
                 from [01m[K/opt/ros/dashing/include/rclcpp/callback_group.hpp:24[m[K,
                 from [01m[K/opt/ros/dashing/include/rclcpp/any_executable.hpp:20[m[K,
                 from [01m[K/opt/ros/dashing/include/rclcpp/memory_strategy.hpp:24[m[K,
                 from [01m[K/opt/ros/dashing/include/rclcpp/memory_strategies.hpp:18[m[K,
                 from [01m[K/opt/ros/dashing/include/rclcpp/executor.hpp:33[m[K,
                 from [01m[K/opt/ros/dashing/include/rclcpp/executors/multi_threaded_executor.hpp:24[m[K,
                 from [01m[K/opt/ros/dashing/include/rclcpp/executors.hpp:21[m[K,
                 from [01m[K/opt/ros/dashing/include/rclcpp/rclcpp.hpp:144[m[K,
                 from [01m[K/home/orthrus1-1/orthrus1-1/src/motor/src/motor_carryout.cpp:15[m[K:
/opt/ros/dashing/include/rclcpp/any_subscription_callback.hpp: In instantiation of â€˜[01m[Kvoid rclcpp::AnySubscriptionCallback<MessageT, Alloc>::set(CallbackT) [with CallbackT = std::_Bind<void (motor_carryout::*())(std::shared_ptr<message::msg::Motorcarryout_<std::allocator<void> > >) const>; typename std::enable_if<rclcpp::function_traits::same_arguments<CallbackT, std::function<void(std::shared_ptr<_Tp>)> >::value>::type* <anonymous> = 0; MessageT = message::msg::Motorcarryout_<std::allocator<void> >; Alloc = std::allocator<void>][m[Kâ€™:
[01m[K/opt/ros/dashing/include/rclcpp/subscription_factory.hpp:93:3:[m[K   required from â€˜[01m[Krclcpp::SubscriptionFactory rclcpp::create_subscription_factory(CallbackT&&, const rclcpp::SubscriptionEventCallbacks&, typename rclcpp::message_memory_strategy::MessageMemoryStrategy<CallbackMessageT, Alloc>::SharedPtr, std::shared_ptr<PublisherT>) [with MessageT = message::msg::Motorcarryout_<std::allocator<void> >; CallbackT = std::_Bind<void (motor_carryout::*())(std::shared_ptr<message::msg::Motorcarryout_<std::allocator<void> > >) const>; Alloc = std::allocator<void>; CallbackMessageT = message::msg::Motorcarryout_<std::allocator<void> >; SubscriptionT = rclcpp::Subscription<message::msg::Motorcarryout_<std::allocator<void> > >; typename rclcpp::message_memory_strategy::MessageMemoryStrategy<CallbackMessageT, Alloc>::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<message::msg::Motorcarryout_<std::allocator<void> >, std::allocator<void> > >][m[Kâ€™
[01m[K/opt/ros/dashing/include/rclcpp/create_subscription.hpp:115:71:[m[K   required from â€˜[01m[Kstd::shared_ptr<SubscriptionT> rclcpp::create_subscription(NodeT&&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename rclcpp::message_memory_strategy::MessageMemoryStrategy<CallbackMessageT, Alloc>::SharedPtr) [with MessageT = message::msg::Motorcarryout_<std::allocator<void> >; CallbackT = std::_Bind<void (motor_carryout::*())(std::shared_ptr<message::msg::Motorcarryout_<std::allocator<void> > >) const>; AllocatorT = std::allocator<void>; CallbackMessageT = message::msg::Motorcarryout_<std::allocator<void> >; SubscriptionT = rclcpp::Subscription<message::msg::Motorcarryout_<std::allocator<void> > >; NodeT = rclcpp::Node&; std::__cxx11::string = std::__cxx11::basic_string<char>; typename rclcpp::message_memory_strategy::MessageMemoryStrategy<CallbackMessageT, Alloc>::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<message::msg::Motorcarryout_<std::allocator<void> >, std::allocator<void> > >][m[Kâ€™
[01m[K/opt/ros/dashing/include/rclcpp/node_impl.hpp:124:47:[m[K   required from â€˜[01m[Kstd::shared_ptr<SubscriptionT> rclcpp::Node::create_subscription(const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename rclcpp::message_memory_strategy::MessageMemoryStrategy<typename rclcpp::subscription_traits::has_message_type<CallbackT>::type, AllocatorT>::SharedPtr) [with MessageT = message::msg::Motorcarryout_<std::allocator<void> >; CallbackT = std::_Bind<void (motor_carryout::*())(std::shared_ptr<message::msg::Motorcarryout_<std::allocator<void> > >) const>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<message::msg::Motorcarryout_<std::allocator<void> > >; std::__cxx11::string = std::__cxx11::basic_string<char>; typename rclcpp::message_memory_strategy::MessageMemoryStrategy<typename rclcpp::subscription_traits::has_message_type<CallbackT>::type, AllocatorT>::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<message::msg::Motorcarryout_<std::allocator<void> >, std::allocator<void> > >][m[Kâ€™
[01m[K/home/orthrus1-1/orthrus1-1/src/motor/src/motor_carryout.cpp:28:70:[m[K   required from here
[01m[K/opt/ros/dashing/include/rclcpp/any_subscription_callback.hpp:82:26:[m[K [01;31m[Kerror: [m[Kno match for â€˜[01m[Koperator=[m[Kâ€™ (operand types are â€˜[01m[Krclcpp::AnySubscriptionCallback<message::msg::Motorcarryout_<std::allocator<void> >, std::allocator<void> >::SharedPtrCallback {aka std::function<void(std::shared_ptr<message::msg::Motorcarryout_<std::allocator<void> > >)>}[m[Kâ€™ and â€˜[01m[Kstd::_Bind<void (motor_carryout::*())(std::shared_ptr<message::msg::Motorcarryout_<std::allocator<void> > >) const>[m[Kâ€™)
     [01;31m[Kshared_ptr_callback_ = callback[m[K;
     [01;31m[K~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
In file included from [01m[K/usr/include/c++/7/functional:58:0[m[K,
                 from [01m[K/home/orthrus1-1/orthrus1-1/src/motor/src/motor_carryout.cpp:12[m[K:
[01m[K/usr/include/c++/7/bits/std_function.h:480:7:[m[K [01;36m[Knote: [m[Kcandidate: std::function<_Res(_ArgTypes ...)>& std::function<_Res(_ArgTypes ...)>::operator=(const std::function<_Res(_ArgTypes ...)>&) [with _Res = void; _ArgTypes = {std::shared_ptr<message::msg::Motorcarryout_<std::allocator<void> > >}]
       [01;36m[Koperator[m[K=(const function& __x)
       [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/7/bits/std_function.h:480:7:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd::_Bind<void (motor_carryout::*())(std::shared_ptr<message::msg::Motorcarryout_<std::allocator<void> > >) const>[m[Kâ€™ to â€˜[01m[Kconst std::function<void(std::shared_ptr<message::msg::Motorcarryout_<std::allocator<void> > >)>&[m[Kâ€™
[01m[K/usr/include/c++/7/bits/std_function.h:498:7:[m[K [01;36m[Knote: [m[Kcandidate: std::function<_Res(_ArgTypes ...)>& std::function<_Res(_ArgTypes ...)>::operator=(std::function<_Res(_ArgTypes ...)>&&) [with _Res = void; _ArgTypes = {std::shared_ptr<message::msg::Motorcarryout_<std::allocator<void> > >}]
       [01;36m[Koperator[m[K=(function&& __x) noexcept
       [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/7/bits/std_function.h:498:7:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd::_Bind<void (motor_carryout::*())(std::shared_ptr<message::msg::Motorcarryout_<std::allocator<void> > >) const>[m[Kâ€™ to â€˜[01m[Kstd::function<void(std::shared_ptr<message::msg::Motorcarryout_<std::allocator<void> > >)>&&[m[Kâ€™
[01m[K/usr/include/c++/7/bits/std_function.h:512:7:[m[K [01;36m[Knote: [m[Kcandidate: std::function<_Res(_ArgTypes ...)>& std::function<_Res(_ArgTypes ...)>::operator=(std::nullptr_t) [with _Res = void; _ArgTypes = {std::shared_ptr<message::msg::Motorcarryout_<std::allocator<void> > >}; std::nullptr_t = std::nullptr_t]
       [01;36m[Koperator[m[K=(nullptr_t) noexcept
       [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/7/bits/std_function.h:512:7:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd::_Bind<void (motor_carryout::*())(std::shared_ptr<message::msg::Motorcarryout_<std::allocator<void> > >) const>[m[Kâ€™ to â€˜[01m[Kstd::nullptr_t[m[Kâ€™
[01m[K/usr/include/c++/7/bits/std_function.h:541:2:[m[K [01;36m[Knote: [m[Kcandidate: template<class _Functor> std::function<_Res(_ArgTypes ...)>::_Requires<std::function<_Res(_ArgTypes ...)>::_Callable<typename std::decay<_U1>::type>, std::function<_Res(_ArgTypes ...)>&> std::function<_Res(_ArgTypes ...)>::operator=(_Functor&&) [with _Functor = _Functor; _Res = void; _ArgTypes = {std::shared_ptr<message::msg::Motorcarryout_<std::allocator<void> > >}]
  [01;36m[Koperator[m[K=(_Functor&& __f)
  [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/7/bits/std_function.h:541:2:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
/usr/include/c++/7/bits/std_function.h: In substitution of â€˜[01m[Ktemplate<class _Functor> std::function<void(std::shared_ptr<message::msg::Motorcarryout_<std::allocator<void> > >)>::_Requires<std::function<void(std::shared_ptr<message::msg::Motorcarryout_<std::allocator<void> > >)>::_Callable<typename std::decay<_Tp>::type, typename std::result_of<typename std::decay<_Tp>::type&(std::shared_ptr<message::msg::Motorcarryout_<std::allocator<void> > >)>::type>, std::function<void(std::shared_ptr<message::msg::Motorcarryout_<std::allocator<void> > >)>&> std::function<void(std::shared_ptr<message::msg::Motorcarryout_<std::allocator<void> > >)>::operator=<_Functor>(_Functor&&) [with _Functor = std::_Bind<void (motor_carryout::*())(std::shared_ptr<message::msg::Motorcarryout_<std::allocator<void> > >) const>&][m[Kâ€™:
[01m[K/opt/ros/dashing/include/rclcpp/any_subscription_callback.hpp:82:26:[m[K   required from â€˜[01m[Kvoid rclcpp::AnySubscriptionCallback<MessageT, Alloc>::set(CallbackT) [with CallbackT = std::_Bind<void (motor_carryout::*())(std::shared_ptr<message::msg::Motorcarryout_<std::allocator<void> > >) const>; typename std::enable_if<rclcpp::function_traits::same_arguments<CallbackT, std::function<void(std::shared_ptr<_Tp>)> >::value>::type* <anonymous> = 0; MessageT = message::msg::Motorcarryout_<std::allocator<void> >; Alloc = std::allocator<void>][m[Kâ€™
[01m[K/opt/ros/dashing/include/rclcpp/subscription_factory.hpp:93:3:[m[K   required from â€˜[01m[Krclcpp::SubscriptionFactory rclcpp::create_subscription_factory(CallbackT&&, const rclcpp::SubscriptionEventCallbacks&, typename rclcpp::message_memory_strategy::MessageMemoryStrategy<CallbackMessageT, Alloc>::SharedPtr, std::shared_ptr<PublisherT>) [with MessageT = message::msg::Motorcarryout_<std::allocator<void> >; CallbackT = std::_Bind<void (motor_carryout::*())(std::shared_ptr<message::msg::Motorcarryout_<std::allocator<void> > >) const>; Alloc = std::allocator<void>; CallbackMessageT = message::msg::Motorcarryout_<std::allocator<void> >; SubscriptionT = rclcpp::Subscription<message::msg::Motorcarryout_<std::allocator<void> > >; typename rclcpp::message_memory_strategy::MessageMemoryStrategy<CallbackMessageT, Alloc>::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<message::msg::Motorcarryout_<std::allocator<void> >, std::allocator<void> > >][m[Kâ€™
[01m[K/opt/ros/dashing/include/rclcpp/create_subscription.hpp:115:71:[m[K   required from â€˜[01m[Kstd::shared_ptr<SubscriptionT> rclcpp::create_subscription(NodeT&&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename rclcpp::message_memory_strategy::MessageMemoryStrategy<CallbackMessageT, Alloc>::SharedPtr) [with MessageT = message::msg::Motorcarryout_<std::allocator<void> >; CallbackT = std::_Bind<void (motor_carryout::*())(std::shared_ptr<message::msg::Motorcarryout_<std::allocator<void> > >) const>; AllocatorT = std::allocator<void>; CallbackMessageT = message::msg::Motorcarryout_<std::allocator<void> >; SubscriptionT = rclcpp::Subscription<message::msg::Motorcarryout_<std::allocator<void> > >; NodeT = rclcpp::Node&; std::__cxx11::string = std::__cxx11::basic_string<char>; typename rclcpp::message_memory_strategy::MessageMemoryStrategy<CallbackMessageT, Alloc>::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<message::msg::Motorcarryout_<std::allocator<void> >, std::allocator<void> > >][m[Kâ€™
[01m[K/opt/ros/dashing/include/rclcpp/node_impl.hpp:124:47:[m[K   required from â€˜[01m[Kstd::shared_ptr<SubscriptionT> rclcpp::Node::create_subscription(const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename rclcpp::message_memory_strategy::MessageMemoryStrategy<typename rclcpp::subscription_traits::has_message_type<CallbackT>::type, AllocatorT>::SharedPtr) [with MessageT = message::msg::Motorcarryout_<std::allocator<void> >; CallbackT = std::_Bind<void (motor_carryout::*())(std::shared_ptr<message::msg::Motorcarryout_<std::allocator<void> > >) const>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<message::msg::Motorcarryout_<std::allocator<void> > >; std::__cxx11::string = std::__cxx11::basic_string<char>; typename rclcpp::message_memory_strategy::MessageMemoryStrategy<typename rclcpp::subscription_traits::has_message_type<CallbackT>::type, AllocatorT>::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<message::msg::Motorcarryout_<std::allocator<void> >, std::allocator<void> > >][m[Kâ€™
[01m[K/home/orthrus1-1/orthrus1-1/src/motor/src/motor_carryout.cpp:28:70:[m[K   required from here
[01m[K/usr/include/c++/7/bits/std_function.h:541:2:[m[K [01;31m[Kerror: [m[Kno type named â€˜[01m[Ktype[m[Kâ€™ in â€˜[01m[Kclass std::result_of<std::_Bind<void (motor_carryout::*())(std::shared_ptr<message::msg::Motorcarryout_<std::allocator<void> > >) const>&(std::shared_ptr<message::msg::Motorcarryout_<std::allocator<void> > >)>[m[Kâ€™
/opt/ros/dashing/include/rclcpp/any_subscription_callback.hpp: In instantiation of â€˜[01m[Kvoid rclcpp::AnySubscriptionCallback<MessageT, Alloc>::set(CallbackT) [with CallbackT = std::_Bind<void (motor_carryout::*())(std::shared_ptr<message::msg::Motorcarryout_<std::allocator<void> > >) const>; typename std::enable_if<rclcpp::function_traits::same_arguments<CallbackT, std::function<void(std::shared_ptr<_Tp>)> >::value>::type* <anonymous> = 0; MessageT = message::msg::Motorcarryout_<std::allocator<void> >; Alloc = std::allocator<void>][m[Kâ€™:
[01m[K/opt/ros/dashing/include/rclcpp/subscription_factory.hpp:93:3:[m[K   required from â€˜[01m[Krclcpp::SubscriptionFactory rclcpp::create_subscription_factory(CallbackT&&, const rclcpp::SubscriptionEventCallbacks&, typename rclcpp::message_memory_strategy::MessageMemoryStrategy<CallbackMessageT, Alloc>::SharedPtr, std::shared_ptr<PublisherT>) [with MessageT = message::msg::Motorcarryout_<std::allocator<void> >; CallbackT = std::_Bind<void (motor_carryout::*())(std::shared_ptr<message::msg::Motorcarryout_<std::allocator<void> > >) const>; Alloc = std::allocator<void>; CallbackMessageT = message::msg::Motorcarryout_<std::allocator<void> >; SubscriptionT = rclcpp::Subscription<message::msg::Motorcarryout_<std::allocator<void> > >; typename rclcpp::message_memory_strategy::MessageMemoryStrategy<CallbackMessageT, Alloc>::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<message::msg::Motorcarryout_<std::allocator<void> >, std::allocator<void> > >][m[Kâ€™
[01m[K/opt/ros/dashing/include/rclcpp/create_subscription.hpp:115:71:[m[K   required from â€˜[01m[Kstd::shared_ptr<SubscriptionT> rclcpp::create_subscription(NodeT&&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename rclcpp::message_memory_strategy::MessageMemoryStrategy<CallbackMessageT, Alloc>::SharedPtr) [with MessageT = message::msg::Motorcarryout_<std::allocator<void> >; CallbackT = std::_Bind<void (motor_carryout::*())(std::shared_ptr<message::msg::Motorcarryout_<std::allocator<void> > >) const>; AllocatorT = std::allocator<void>; CallbackMessageT = message::msg::Motorcarryout_<std::allocator<void> >; SubscriptionT = rclcpp::Subscription<message::msg::Motorcarryout_<std::allocator<void> > >; NodeT = rclcpp::Node&; std::__cxx11::string = std::__cxx11::basic_string<char>; typename rclcpp::message_memory_strategy::MessageMemoryStrategy<CallbackMessageT, Alloc>::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<message::msg::Motorcarryout_<std::allocator<void> >, std::allocator<void> > >][m[Kâ€™
[01m[K/opt/ros/dashing/include/rclcpp/node_impl.hpp:124:47:[m[K   required from â€˜[01m[Kstd::shared_ptr<SubscriptionT> rclcpp::Node::create_subscription(const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename rclcpp::message_memory_strategy::MessageMemoryStrategy<typename rclcpp::subscription_traits::has_message_type<CallbackT>::type, AllocatorT>::SharedPtr) [with MessageT = message::msg::Motorcarryout_<std::allocator<void> >; CallbackT = std::_Bind<void (motor_carryout::*())(std::shared_ptr<message::msg::Motorcarryout_<std::allocator<void> > >) const>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<message::msg::Motorcarryout_<std::allocator<void> > >; std::__cxx11::string = std::__cxx11::basic_string<char>; typename rclcpp::message_memory_strategy::MessageMemoryStrategy<typename rclcpp::subscription_traits::has_message_type<CallbackT>::type, AllocatorT>::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<message::msg::Motorcarryout_<std::allocator<void> >, std::allocator<void> > >][m[Kâ€™
[01m[K/home/orthrus1-1/orthrus1-1/src/motor/src/motor_carryout.cpp:28:70:[m[K   required from here
[01m[K/usr/include/c++/7/bits/std_function.h:550:2:[m[K [01;36m[Knote: [m[Kcandidate: template<class _Functor> std::function<_Res(_ArgTypes ...)>& std::function<_Res(_ArgTypes ...)>::operator=(std::reference_wrapper<_Functor>) [with _Functor = _Functor; _Res = void; _ArgTypes = {std::shared_ptr<message::msg::Motorcarryout_<std::allocator<void> > >}]
  [01;36m[Koperator[m[K=(reference_wrapper<_Functor> __f) noexcept
  [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/7/bits/std_function.h:550:2:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
In file included from [01m[K/opt/ros/dashing/include/rclcpp/subscription_base.hpp:28:0[m[K,
                 from [01m[K/opt/ros/dashing/include/rclcpp/intra_process_manager_impl.hpp:38[m[K,
                 from [01m[K/opt/ros/dashing/include/rclcpp/intra_process_manager.hpp:32[m[K,
                 from [01m[K/opt/ros/dashing/include/rclcpp/publisher.hpp:35[m[K,
                 from [01m[K/opt/ros/dashing/include/rclcpp/callback_group.hpp:24[m[K,
                 from [01m[K/opt/ros/dashing/include/rclcpp/any_executable.hpp:20[m[K,
                 from [01m[K/opt/ros/dashing/include/rclcpp/memory_strategy.hpp:24[m[K,
                 from [01m[K/opt/ros/dashing/include/rclcpp/memory_strategies.hpp:18[m[K,
                 from [01m[K/opt/ros/dashing/include/rclcpp/executor.hpp:33[m[K,
                 from [01m[K/opt/ros/dashing/include/rclcpp/executors/multi_threaded_executor.hpp:24[m[K,
                 from [01m[K/opt/ros/dashing/include/rclcpp/executors.hpp:21[m[K,
                 from [01m[K/opt/ros/dashing/include/rclcpp/rclcpp.hpp:144[m[K,
                 from [01m[K/home/orthrus1-1/orthrus1-1/src/motor/src/motor_carryout.cpp:15[m[K:
[01m[K/opt/ros/dashing/include/rclcpp/any_subscription_callback.hpp:82:26:[m[K [01;36m[Knote: [m[K  â€˜[01m[Kstd::_Bind<void (motor_carryout::*())(std::shared_ptr<message::msg::Motorcarryout_<std::allocator<void> > >) const>[m[Kâ€™ is not derived from â€˜[01m[Kstd::reference_wrapper<_Tp>[m[Kâ€™
     [01;36m[Kshared_ptr_callback_ = callback[m[K;
     [01;36m[K~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~[m[K
make[2]: *** [CMakeFiles/motor_carryout.dir/src/motor_carryout.cpp.o] Error 1
make[1]: *** [CMakeFiles/motor_carryout.dir/all] Error 2
make: *** [all] Error 2
